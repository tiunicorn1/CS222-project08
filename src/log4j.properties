# An example log4j configuration file that outputs both to System.out and a file named 'test.log'.

# OUTPUT FORMATTING CODES:
# c  :  category of the logging event
# C  :  fully qualified class name  (WARNING: SLOW)
# d  :  date
# F  :  file name which issued logging request  (WARNING: SLOW)
# l  :  location which generated logging request
# L  :  line number which generated logging request  (WARNING: SLOW)
# m  :  message
# M  :  class method which generated logging request  (WARNING: SLOW)
# n  :  new line/carriage return/line feed
# p  :  priority
# r  :  # milliseconds since program started
# t  :  thread name

# The root logger uses the appenders called A1 and A2. Since no level is specified, note the empty string between the comma (",") and the
# equals sign ("="), the level of the root logger remains untouched. Log4j always initializes the level for the root logger to
# DEBUG. The root logger is the only logger that has a default level. By default, all other loggers do not have an assigned level,
# such that they inherit their level instead.

log4j.debug=false
#log4j.debug=true
#log4j.rootLogger=, A1, A2
log4j.rootLogger=, A2

# A1 is set to be ConsoleAppender sending its output to System.out
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d %-5p [%t] %-17c{2} (%C:%13F:%L) %3x - %m%n


# Appender A2 writes to the file "test.log".
log4j.appender.A2=org.apache.log4j.FileAppender
log4j.appender.A2.File=mytest.log
log4j.appender.A2.Append=true
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%r [%t] %-5p %c %x - %m%n
#log4j.appender.A2.layout.ConversionPattern=%d / %-5r / %-5p / [%t] / %c{2} / %C%L - %m%n
